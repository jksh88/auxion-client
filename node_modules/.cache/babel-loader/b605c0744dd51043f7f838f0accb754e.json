{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joohoonkim/Documents/CW/auxion/client/src/components/profile.component.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropertyCard from './propertyCard.component';\nimport BidCard from './bidCard.component';\nimport { io } from 'socket.io-client';\nconst {\n  REACT_APP_SERVER_URL\n} = process.env;\nconst initialState = null;\n\nconst Profile = props => {\n  _s();\n\n  const [user, setUser] = useState(initialState);\n  const name = user && user.name || 'Name missing..';\n  useEffect(() => {\n    const socket = io(process.env.REACT_APP_SERVER_URL, {\n      transports: ['websocket']\n    });\n    socket.on('bid', payload => {\n      const auction = JSON.parse(payload);\n      setUser({ ...user,\n        auctions: user.auctions.map(actn => actn._id === auction._id ? auction : actn)\n      }); //I am mapping through all the auctions in the state looking for the auction that has the same id with the one that I have received through the websocket, and update the value with the one for the newly received auction. Used 'actn' instead of 'auction' to prevent the latter from shadowing original auction in the state\n\n      console.log('AUCTION: ', auction);\n      console.log('Socket connection established');\n    });\n    const accessToken = localStorage.getItem('accessToken');\n    console.log('ACCESS TKN', accessToken);\n\n    const getProfile = async accessToken => {\n      const userInfo = await fetch(`${REACT_APP_SERVER_URL}/me`, {\n        method: 'GET',\n        // credentials: 'include',\n        mode: 'cors',\n        headers: {\n          // 'Content-Type': 'application/json',\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(res => res.json()).catch(err => console.log(err));\n      console.log('USERINFO at Proifle Component after making get request call:', userInfo);\n\n      if (userInfo) {\n        setUser(userInfo); // const { name } = userInfo;\n        // setState((curState) => ({ ...curState, name }));\n      } else {\n        console.log('No user info found');\n      }\n    };\n\n    getProfile(accessToken);\n  }, []); //Need to display my property and auction status information below.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Good day, \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Properties \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-properties\",\n      children: user && user.properties.map(({\n        _id,\n        ...otherProps\n      }) => /*#__PURE__*/_jsxDEV(PropertyCard, { ...otherProps,\n        id: _id\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 20\n      },\n      children: \"My Bids \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green'\n        },\n        children: \"Green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" if your bid price is the highest bid at the moment.\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \" Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \" if there is a higher bid price from another buyer\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Click on the card to adjust your bid terms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), user && user.auctions.map(auction => /*#__PURE__*/_jsxDEV(BidCard, {\n      auction: auction\n    }, auction._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"a7tWCTRu5UscEqGtKFKkzOJrmhA=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/joohoonkim/Documents/CW/auxion/client/src/components/profile.component.jsx"],"names":["axios","React","useState","useEffect","Link","PropertyCard","BidCard","io","REACT_APP_SERVER_URL","process","env","initialState","Profile","props","user","setUser","name","socket","transports","on","payload","auction","JSON","parse","auctions","map","actn","_id","console","log","accessToken","localStorage","getItem","getProfile","userInfo","fetch","method","mode","headers","Authorization","then","res","json","catch","err","properties","otherProps","marginTop","color"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA2BC,OAAO,CAACC,GAAzC;AAEA,MAAMC,YAAY,GAAG,IAArB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACS,YAAD,CAAhC;AAEA,QAAMK,IAAI,GAAIF,IAAI,IAAIA,IAAI,CAACE,IAAd,IAAuB,gBAApC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,MAAM,GAAGV,EAAE,CAACE,OAAO,CAACC,GAAR,CAAYF,oBAAb,EAAmC;AAClDU,MAAAA,UAAU,EAAE,CAAC,WAAD;AADsC,KAAnC,CAAjB;AAGAD,IAAAA,MAAM,CAACE,EAAP,CAAU,KAAV,EAAkBC,OAAD,IAAa;AAC5B,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAhB;AACAL,MAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENU,QAAAA,QAAQ,EAAEV,IAAI,CAACU,QAAL,CAAcC,GAAd,CAAmBC,IAAD,IAC1BA,IAAI,CAACC,GAAL,KAAaN,OAAO,CAACM,GAArB,GAA2BN,OAA3B,GAAqCK,IAD7B;AAFJ,OAAD,CAAP,CAF4B,CAQ5B;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,OAAzB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAXD;AAaA,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,WAA1B;;AACA,UAAMG,UAAU,GAAG,MAAOH,WAAP,IAAuB;AACxC,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE3B,oBAAqB,KAAzB,EAA+B;AACzD4B,QAAAA,MAAM,EAAE,KADiD;AAEzD;AACAC,QAAAA,IAAI,EAAE,MAHmD;AAIzDC,QAAAA,OAAO,EAAE;AACP;AACAC,UAAAA,aAAa,EAAG,UAAST,WAAY;AAF9B;AAJgD,OAA/B,CAAL,CASpBU,IAToB,CASdC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATM,EAUpBC,KAVoB,CAUbC,GAAD,IAAShB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAVK,CAAvB;AAYAhB,MAAAA,OAAO,CAACC,GAAR,CACE,8DADF,EAEEK,QAFF;;AAKA,UAAIA,QAAJ,EAAc;AACZnB,QAAAA,OAAO,CAACmB,QAAD,CAAP,CADY,CAEZ;AACA;AACD,OAJD,MAIO;AACLN,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;AACF,KAzBD;;AA0BAI,IAAAA,UAAU,CAACH,WAAD,CAAV;AACD,GA9CQ,EA8CN,EA9CM,CAAT,CALyB,CAoDzB;;AACA,sBACE;AAAA,4BACE;AAAA,+BAAed,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGF,IAAI,IACHA,IAAI,CAAC+B,UAAL,CAAgBpB,GAAhB,CAAoB,CAAC;AAAEE,QAAAA,GAAF;AAAO,WAAGmB;AAAV,OAAD,kBAClB,QAAC,YAAD,OAA4BA,UAA5B;AAAwC,QAAA,EAAE,EAAEnB;AAA5C,SAAmBA,GAAnB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAI,MAAA,KAAK,EAAE;AAAEoB,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAWE;AAAA,iBACG,GADH,eAEE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,uEAIE;AAAM,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,EAoBGlC,IAAI,IACHA,IAAI,CAACU,QAAL,CAAcC,GAAd,CAAmBJ,OAAD,iBAChB,QAAC,OAAD;AAA2B,MAAA,OAAO,EAAEA;AAApC,OAAcA,OAAO,CAACM,GAAtB;AAAA;AAAA;AAAA;AAAA,YADF,CArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAhFD;;GAAMf,O;;KAAAA,O;AAkFN,eAAeA,OAAf","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropertyCard from './propertyCard.component';\nimport BidCard from './bidCard.component';\nimport { io } from 'socket.io-client';\n\nconst { REACT_APP_SERVER_URL } = process.env;\n\nconst initialState = null;\n\nconst Profile = (props) => {\n  const [user, setUser] = useState(initialState);\n\n  const name = (user && user.name) || 'Name missing..';\n\n  useEffect(() => {\n    const socket = io(process.env.REACT_APP_SERVER_URL, {\n      transports: ['websocket'],\n    });\n    socket.on('bid', (payload) => {\n      const auction = JSON.parse(payload);\n      setUser({\n        ...user,\n        auctions: user.auctions.map((actn) =>\n          actn._id === auction._id ? auction : actn\n        ),\n      });\n      //I am mapping through all the auctions in the state looking for the auction that has the same id with the one that I have received through the websocket, and update the value with the one for the newly received auction. Used 'actn' instead of 'auction' to prevent the latter from shadowing original auction in the state\n      console.log('AUCTION: ', auction);\n      console.log('Socket connection established');\n    });\n\n    const accessToken = localStorage.getItem('accessToken');\n    console.log('ACCESS TKN', accessToken);\n    const getProfile = async (accessToken) => {\n      const userInfo = await fetch(`${REACT_APP_SERVER_URL}/me`, {\n        method: 'GET',\n        // credentials: 'include',\n        mode: 'cors',\n        headers: {\n          // 'Content-Type': 'application/json',\n          Authorization: `Bearer ${accessToken}`,\n        },\n      })\n        .then((res) => res.json())\n        .catch((err) => console.log(err));\n\n      console.log(\n        'USERINFO at Proifle Component after making get request call:',\n        userInfo\n      );\n\n      if (userInfo) {\n        setUser(userInfo);\n        // const { name } = userInfo;\n        // setState((curState) => ({ ...curState, name }));\n      } else {\n        console.log('No user info found');\n      }\n    };\n    getProfile(accessToken);\n  }, []);\n  //Need to display my property and auction status information below.\n  return (\n    <div>\n      <h2>Good day, {name}</h2>\n      <h2>My Properties </h2>\n      <div className=\"my-properties\">\n        {user &&\n          user.properties.map(({ _id, ...otherProps }) => (\n            <PropertyCard key={_id} {...otherProps} id={_id} />\n          ))}\n      </div>\n      <h2 style={{ marginTop: 20 }}>My Bids </h2>\n\n      <h4>\n        {' '}\n        <span style={{ color: 'green' }}>Green</span> if your bid price is the\n        highest bid at the moment.\n        <span style={{ color: 'red' }}> Red</span> if there is a higher bid\n        price from another buyer\n      </h4>\n\n      <h4>Click on the card to adjust your bid terms</h4>\n      {user &&\n        user.auctions.map((auction) => (\n          <BidCard key={auction._id} auction={auction} />\n        ))}\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}