{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joohoonkim/Documents/CW/auxion/client/src/components/auctionPage.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport PropertyPictures from './propertyPictures.component';\nimport OwnerAuctionInterface from './ownerAuctionInterface.component';\nimport BuyerAuctionInterface from './buyerAuctionInterface.component';\nimport { io } from 'socket.io-client';\nimport './auctionPage.styles.css';\nconst {\n  REACT_APP_SERVER_URL\n} = process.env;\n\nconst AuctionPage = props => {\n  _s();\n\n  const {\n    id\n  } = props.match.params;\n  const [property, setProperty] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(0);\n  useEffect(() => {\n    const socket = io(process.env.REACT_APP_SERVER_URL, {\n      transports: ['websocket']\n    });\n    socket.on('bid', payload => {\n      const auction = JSON.parse(payload);\n\n      if (auction.propertyOnSale === id) {\n        setProperty({ ...property,\n          auction\n        });\n      }\n\n      console.log(payload);\n      console.log('Socket connection established');\n    }); //I don't need to import process.env above. React does it for me as long as I have it included in the .env file.\n    //It's good to have the socket.io client function in useEffect callback because we need to make sure the compoent has loaded first because client relies on broswer.\n\n    axios.get(`${REACT_APP_SERVER_URL}/properties/${id}`, {\n      headers: {\n        Authorization: localStorage.getItem('accessToken')\n      }\n    }).then(res => {\n      setProperty(res.data);\n      setIsOwner(localStorage.getItem('userId') === res.data.owner);\n      console.log('DATA: ', res.data);\n    }).catch(err => console.log(err));\n    let endDate = new Date(property && property.auction.auctionEndTime).getTime();\n    let now = new Date().getTime();\n    let timeTillEnd = endDate - now;\n    setTimeRemaining(timeTillEnd);\n  }, [id]); //If I use some variable from outer scope(like 'id' here) in useEffect, that varialbe needs to go inside the array after the useEffect, because it's a presumption of React that I might have have forgottent it. It's because my state can be dependent on the value of that variable. This callback in useEffect will run everytime and only when the id changes.\n\n  const openModal = () => {\n    setIsOpen(true);\n  }; // useEffect(\n  //   () =>\n  //     setInterval(() => {\n  //       let endDate = new Date(\n  //         property.auction.auctionEndTime\n  //       ).getTime();\n  //       let now = new Date().getTime();\n  //       let timeTillEnd = endDate - now;\n  //       setTimeRemaining(timeTillEnd);\n  //     }),\n  //   1000\n  // );\n  // useEffect(() => {\n  //   let endDate = new Date(property.auction.auctionEndTime).getTime();\n  //   let now = new Date().getTime();\n  //   let timeTillEnd = endDate - now;\n  //   setTimeRemaining(timeTillEnd);\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auction-page\",\n    children: property && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: `Auction page for address ${property.address.street}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"picture-and-auction-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-picture\",\n          onClick: openModal,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: property.images[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auction-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Current Highest Bid: \", property.auction.currentHighestBid]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Auction Ends in \", timeRemaining]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"by-user-type-interface\",\n            children: isOwner ? /*#__PURE__*/_jsxDEV(OwnerAuctionInterface, {\n              bids: property.auction.bids\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(BuyerAuctionInterface, {\n              bids: property.auction.bids\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        contentLabel: \"Example Modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsOpen(false),\n          children: \"Close Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PropertyPictures, {\n          pics: property.images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuctionPage, \"DTy4fcrTCfM/mLD32TFYqOROBiA=\");\n\n_c = AuctionPage;\nexport default AuctionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionPage\");","map":{"version":3,"sources":["/Users/joohoonkim/Documents/CW/auxion/client/src/components/auctionPage.component.jsx"],"names":["React","useEffect","useState","axios","Modal","PropertyPictures","OwnerAuctionInterface","BuyerAuctionInterface","io","REACT_APP_SERVER_URL","process","env","AuctionPage","props","id","match","params","property","setProperty","isOwner","setIsOwner","isOpen","setIsOpen","timeRemaining","setTimeRemaining","socket","transports","on","payload","auction","JSON","parse","propertyOnSale","console","log","get","headers","Authorization","localStorage","getItem","then","res","data","owner","catch","err","endDate","Date","auctionEndTime","getTime","now","timeTillEnd","openModal","address","street","images","currentHighestBid","bids"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,OAAO,0BAAP;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA2BC,OAAO,CAACC,GAAzC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAK,CAACE,KAAN,CAAYC,MAA3B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,CAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,MAAM,GAAGjB,EAAE,CAACE,OAAO,CAACC,GAAR,CAAYF,oBAAb,EAAmC;AAClDiB,MAAAA,UAAU,EAAE,CAAC,WAAD;AADsC,KAAnC,CAAjB;AAGAD,IAAAA,MAAM,CAACE,EAAP,CAAU,KAAV,EAAkBC,OAAD,IAAa;AAC5B,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAhB;;AACA,UAAIC,OAAO,CAACG,cAAR,KAA2BlB,EAA/B,EAAmC;AACjCI,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVY,UAAAA;AAFU,SAAD,CAAX;AAID;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAVD,EAJc,CAed;AAEA;;AAEA/B,IAAAA,KAAK,CACFgC,GADH,CACQ,GAAE1B,oBAAqB,eAAcK,EAAG,EADhD,EACmD;AAC/CsB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADR;AADsC,KADnD,EAMGC,IANH,CAMSC,GAAD,IAAS;AACbvB,MAAAA,WAAW,CAACuB,GAAG,CAACC,IAAL,CAAX;AACAtB,MAAAA,UAAU,CAACkB,YAAY,CAACC,OAAb,CAAqB,QAArB,MAAmCE,GAAG,CAACC,IAAJ,CAASC,KAA7C,CAAV;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,GAAG,CAACC,IAA1B;AACD,KAVH,EAWGE,KAXH,CAWUC,GAAD,IAASZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAXlB;AAYA,QAAIC,OAAO,GAAG,IAAIC,IAAJ,CACZ9B,QAAQ,IAAIA,QAAQ,CAACY,OAAT,CAAiBmB,cADjB,EAEZC,OAFY,EAAd;AAGA,QAAIC,GAAG,GAAG,IAAIH,IAAJ,GAAWE,OAAX,EAAV;AACA,QAAIE,WAAW,GAAGL,OAAO,GAAGI,GAA5B;AACA1B,IAAAA,gBAAgB,CAAC2B,WAAD,CAAhB;AACD,GArCQ,EAqCN,CAACrC,EAAD,CArCM,CAAT,CAP6B,CA6C7B;;AAEA,QAAMsC,SAAS,GAAG,MAAM;AACtB9B,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD,CA/C6B,CAmD7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACGL,QAAQ,iBACP;AAAA,8BACE;AAAA,+BACE;AAAA,oBAAO,4BAA2BA,QAAQ,CAACoC,OAAT,CAAiBC,MAAO;AAA1D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAS,QAAA,SAAS,EAAC,0BAAnB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,OAAO,EAAEF,SAAtC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEnC,QAAQ,CAACsC,MAAT,CAAgB,CAAhB;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA,oCACE;AAAA,kDACwBtC,QAAQ,CAACY,OAAT,CAAiB2B,iBADzC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,6CAAqBjC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,sBACGJ,OAAO,gBACN,QAAC,qBAAD;AAAuB,cAAA,IAAI,EAAEF,QAAQ,CAACY,OAAT,CAAiB4B;AAA9C;AAAA;AAAA;AAAA;AAAA,oBADM,gBAGN,QAAC,qBAAD;AAAuB,cAAA,IAAI,EAAExC,QAAQ,CAACY,OAAT,CAAiB4B;AAA9C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eA0BE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEpC,MAAf;AAAuB,QAAA,YAAY,EAAC,eAApC;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAEL,QAAQ,CAACsC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA5GD;;GAAM3C,W;;KAAAA,W;AA8GN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport PropertyPictures from './propertyPictures.component';\nimport OwnerAuctionInterface from './ownerAuctionInterface.component';\nimport BuyerAuctionInterface from './buyerAuctionInterface.component';\nimport { io } from 'socket.io-client';\n\nimport './auctionPage.styles.css';\nconst { REACT_APP_SERVER_URL } = process.env;\n\nconst AuctionPage = (props) => {\n  const { id } = props.match.params;\n  const [property, setProperty] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(0);\n\n  useEffect(() => {\n    const socket = io(process.env.REACT_APP_SERVER_URL, {\n      transports: ['websocket'],\n    });\n    socket.on('bid', (payload) => {\n      const auction = JSON.parse(payload);\n      if (auction.propertyOnSale === id) {\n        setProperty({\n          ...property,\n          auction,\n        });\n      }\n      console.log(payload);\n      console.log('Socket connection established');\n    });\n    //I don't need to import process.env above. React does it for me as long as I have it included in the .env file.\n\n    //It's good to have the socket.io client function in useEffect callback because we need to make sure the compoent has loaded first because client relies on broswer.\n\n    axios\n      .get(`${REACT_APP_SERVER_URL}/properties/${id}`, {\n        headers: {\n          Authorization: localStorage.getItem('accessToken'),\n        },\n      })\n      .then((res) => {\n        setProperty(res.data);\n        setIsOwner(localStorage.getItem('userId') === res.data.owner);\n        console.log('DATA: ', res.data);\n      })\n      .catch((err) => console.log(err));\n    let endDate = new Date(\n      property && property.auction.auctionEndTime\n    ).getTime();\n    let now = new Date().getTime();\n    let timeTillEnd = endDate - now;\n    setTimeRemaining(timeTillEnd);\n  }, [id]);\n  //If I use some variable from outer scope(like 'id' here) in useEffect, that varialbe needs to go inside the array after the useEffect, because it's a presumption of React that I might have have forgottent it. It's because my state can be dependent on the value of that variable. This callback in useEffect will run everytime and only when the id changes.\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  // useEffect(\n  //   () =>\n  //     setInterval(() => {\n  //       let endDate = new Date(\n  //         property.auction.auctionEndTime\n  //       ).getTime();\n  //       let now = new Date().getTime();\n  //       let timeTillEnd = endDate - now;\n  //       setTimeRemaining(timeTillEnd);\n  //     }),\n  //   1000\n  // );\n\n  // useEffect(() => {\n  //   let endDate = new Date(property.auction.auctionEndTime).getTime();\n  //   let now = new Date().getTime();\n  //   let timeTillEnd = endDate - now;\n  //   setTimeRemaining(timeTillEnd);\n  // }, []);\n\n  return (\n    <div className=\"auction-page\">\n      {property && (\n        <>\n          <section>\n            <div>{`Auction page for address ${property.address.street}`}</div>\n          </section>\n          <section className=\"picture-and-auction-info\">\n            <div className=\"one-picture\" onClick={openModal}>\n              <img src={property.images[0]} />\n            </div>\n            <div className=\"auction-info\">\n              <div>\n                <h2>\n                  Current Highest Bid: {property.auction.currentHighestBid}\n                </h2>\n                <h2>Auction Ends in {timeRemaining}</h2>\n              </div>\n\n              <div className=\"by-user-type-interface\">\n                {isOwner ? (\n                  <OwnerAuctionInterface bids={property.auction.bids} />\n                ) : (\n                  <BuyerAuctionInterface bids={property.auction.bids} />\n                )}\n              </div>\n            </div>\n          </section>\n\n          <Modal isOpen={isOpen} contentLabel=\"Example Modal\">\n            <button onClick={() => setIsOpen(false)}>Close Modal</button>\n            <PropertyPictures pics={property.images} />\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AuctionPage;\n"]},"metadata":{},"sourceType":"module"}