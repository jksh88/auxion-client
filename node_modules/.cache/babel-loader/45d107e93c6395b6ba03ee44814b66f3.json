{"ast":null,"code":"import _objectSpread from\"/Users/joohoonkim/Documents/CW/auxion/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/joohoonkim/Documents/CW/auxion/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{BrowserRouter,Switch,Route}from'react-router-dom';import'./App.css';import Navbar from'./components/navbar.component';// import Register from './components/register.component';\nimport Login from'./components/login.component';import Register from'./components/register.component';import Landing from'./components/landing.component';import ListProperty from'./components/listProperty.component';import AuctionPage from'./components/auctionPage.component';import Profile from'./components/profile.component';import ByPropertyBids from'./components/byPropertyBids.component';import MakeABid from'./components/makeABid.component';import Logout from'./components/logout.component';import AboutPage from'./components/aboutPage.component';import editListingTerms from'./components/editListingTerms.component';// import Profile from '../profile.component';\n// import Logout from './components/logout.component';\nfunction App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAuthenticated=_useState2[0],setIsAuthenticated=_useState2[1];//I cannot start the state as false because the user might already have token in local storage when he loads the page.\n//App.js only runs when it reloads. This is a situation for example where the user doesn't log out(meaning, the token is still in localStorage), x'es outof th page, goes away, and come back later to reopen the page.\n//But we cannot check local storage before the page is loaded. That's why useEffect needs to be used to check local storage to see if token is there.\nuseEffect(function(){setIsAuthenticated(!!localStorage.getItem('accessToken'));},[]);var handleAuth=function handleAuth(valueFromChild){setIsAuthenticated(valueFromChild);//Q: Can I pass a callback instead?\n};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Navbar,{isAuthenticated:isAuthenticated}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",render:function render(props){return/*#__PURE__*/_jsx(Login,_objectSpread(_objectSpread({},props),{},{handleAuth:handleAuth}));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/register\",render:function render(props){return/*#__PURE__*/_jsx(Register,_objectSpread(_objectSpread({},props),{},{handleAuth:handleAuth}));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Landing}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile\",component:Profile}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/listproperty\",component:ListProperty}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",component:AboutPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/properties/:id\"// render={(props) => <AuctionPage {...props} />}\n,component:AuctionPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/properties/:id/bids\",component:ByPropertyBids}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/properties/:id/makeabid\",component:MakeABid}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/properties/:id/edit\",component:editListingTerms}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/logout\",render:function render(props){return/*#__PURE__*/_jsx(Logout,_objectSpread(_objectSpread({},props),{},{handleAuth:handleAuth}));}})]})]})});}//Q: Was it to pass isAuthenticated state to each Route and then to components that it loads that the component= syntax was changed to props => render syntax?\nexport default App;","map":{"version":3,"sources":["/Users/joohoonkim/Documents/CW/auxion/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Navbar","Login","Register","Landing","ListProperty","AuctionPage","Profile","ByPropertyBids","MakeABid","Logout","AboutPage","editListingTerms","App","isAuthenticated","setIsAuthenticated","localStorage","getItem","handleAuth","valueFromChild","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/navbar.component';\n// import Register from './components/register.component';\nimport Login from './components/login.component';\nimport Register from './components/register.component';\nimport Landing from './components/landing.component';\nimport ListProperty from './components/listProperty.component';\nimport AuctionPage from './components/auctionPage.component';\nimport Profile from './components/profile.component';\nimport ByPropertyBids from './components/byPropertyBids.component';\nimport MakeABid from './components/makeABid.component';\nimport Logout from './components/logout.component';\nimport AboutPage from './components/aboutPage.component';\nimport editListingTerms from './components/editListingTerms.component';\n\n// import Profile from '../profile.component';\n// import Logout from './components/logout.component';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  //I cannot start the state as false because the user might already have token in local storage when he loads the page.\n  //App.js only runs when it reloads. This is a situation for example where the user doesn't log out(meaning, the token is still in localStorage), x'es outof th page, goes away, and come back later to reopen the page.\n  //But we cannot check local storage before the page is loaded. That's why useEffect needs to be used to check local storage to see if token is there.\n  useEffect(() => {\n    setIsAuthenticated(!!localStorage.getItem('accessToken'));\n  }, []);\n  const handleAuth = (valueFromChild) => {\n    setIsAuthenticated(valueFromChild); //Q: Can I pass a callback instead?\n  };\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar isAuthenticated={isAuthenticated} />\n        <Switch>\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) => <Login {...props} handleAuth={handleAuth} />}\n          />\n          <Route\n            exact\n            path=\"/register\"\n            render={(props) => <Register {...props} handleAuth={handleAuth} />}\n          />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/listproperty\" component={ListProperty} />\n          <Route exact path=\"/about\" component={AboutPage} />\n          <Route\n            exact\n            path=\"/properties/:id\"\n            // render={(props) => <AuctionPage {...props} />}\n            component={AuctionPage}\n          />\n          <Route exact path=\"/properties/:id/bids\" component={ByPropertyBids} />\n          <Route exact path=\"/properties/:id/makeabid\" component={MakeABid} />\n          <Route\n            exact\n            path=\"/properties/:id/edit\"\n            component={editListingTerms}\n          />\n          <Route\n            exact\n            path=\"/logout\"\n            render={(props) => <Logout {...props} handleAuth={handleAuth} />}\n          />\n\n          {/* <Route exact path=\"/properties/:id/bids\" component={BidsPage} /> */}\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n//Q: Was it to pass isAuthenticated state to each Route and then to components that it loads that the component= syntax was changed to props => render syntax?\nexport default App;\n"]},"metadata":{},"sourceType":"module"}