{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joohoonkim/Documents/CW/auxion/client/src/components/login.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\nconst initialState = {\n  email: '',\n  password: ''\n};\n\nconst Login = props => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const [buttonEnabled, setButtonEnabled] = useState(false); // const router = useRouter();\n  // const { from } = useParams();\n\n  const {\n    history\n  } = props; // console.log('FROMMMM ', from);\n\n  const id = new URLSearchParams(history.location.search).get('from');\n  const {\n    email,\n    password\n  } = state;\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setState(prevState => ({ ...prevState,\n      [name]: value\n    })); // console.log(email);\n\n    setButtonEnabled(email && password && Boolean(value));\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    setButtonEnabled(false);\n    console.log(state);\n    const res = await fetch(`${REACT_APP_SERVER_URL}/login`, {\n      method: 'POST',\n      // credentials: 'include',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(state)\n    });\n    console.log('RESPONSE ***** ', res);\n\n    if (res.ok) {\n      const user = await res.json();\n      console.log('USER >>>>>', user);\n      const {\n        token,\n        _id\n      } = user;\n      localStorage.setItem('accessToken', token);\n      localStorage.setItem('userId', _id); //push the whole user into localStorage\n\n      props.handleAuth(true); //set isAuthenticated to true using handleAuth function passed down from App component\n\n      setState({\n        email: '',\n        password: ''\n      }); //clean out the fields\n\n      history && history.push(id ? `properties/${id}` : '/profile'); //TODO: if it did NOT come from an unauthenticated user clicking on a property detail button from landing page, but rather\n      //it came from the navbar login, then we should send the user to profile page first\n    } else {\n      alert('Login failed'); // throw new Error();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"sign-in\",\n    onSubmit: handleSubmit // style={{\n    //   display: 'flex',\n    //   flexDirection: 'column',\n    //   width: '30vw',\n    //   margin: '0 auto',\n    //   marginTop: '8vw',\n    //   justifyContent: 'space-around',\n    //   height: '35vw',\n    //   border: '1px solid grey',\n    //   borderRadius: '1rem',\n    //   padding: '3rem',\n    // }}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          value: state.email,\n          onChange: handleChange,\n          required: true,\n          style: {\n            width: '100%',\n            letterSpacing: '.2rem',\n            height: '2rem',\n            border: 'none',\n            borderBottom: '1px solid grey'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: state.password,\n        onChange: handleChange,\n        required: true,\n        style: {\n          width: '100%',\n          letterSpacing: '.3rem',\n          height: '2rem',\n          border: 'none',\n          borderBottom: '1px solid grey'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"h30fmsiVBQBOyu7GKBVnKJafX8o=\");\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/joohoonkim/Documents/CW/auxion/client/src/components/login.component.jsx"],"names":["React","useState","withRouter","useParams","REACT_APP_SERVER_URL","process","env","initialState","email","password","Login","props","state","setState","buttonEnabled","setButtonEnabled","history","id","URLSearchParams","location","search","get","handleChange","evt","name","value","target","prevState","Boolean","handleSubmit","preventDefault","console","log","res","fetch","method","mode","headers","body","JSON","stringify","ok","user","json","token","_id","localStorage","setItem","handleAuth","push","alert","width","letterSpacing","height","border","borderBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst Login = (props) => {\n  const [state, setState] = useState(initialState);\n  const [buttonEnabled, setButtonEnabled] = useState(false);\n  // const router = useRouter();\n  // const { from } = useParams();\n  const { history } = props;\n  // console.log('FROMMMM ', from);\n\n  const id = new URLSearchParams(history.location.search).get('from');\n\n  const { email, password } = state;\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n    // console.log(email);\n\n    setButtonEnabled(email && password && Boolean(value));\n  };\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    setButtonEnabled(false);\n\n    console.log(state);\n    const res = await fetch(`${REACT_APP_SERVER_URL}/login`, {\n      method: 'POST',\n      // credentials: 'include',\n      mode: 'cors',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(state),\n    });\n    console.log('RESPONSE ***** ', res);\n    if (res.ok) {\n      const user = await res.json();\n      console.log('USER >>>>>', user);\n      const { token, _id } = user;\n      localStorage.setItem('accessToken', token);\n      localStorage.setItem('userId', _id);\n      //push the whole user into localStorage\n      props.handleAuth(true); //set isAuthenticated to true using handleAuth function passed down from App component\n      setState({ email: '', password: '' }); //clean out the fields\n      history && history.push(id ? `properties/${id}` : '/profile');\n      //TODO: if it did NOT come from an unauthenticated user clicking on a property detail button from landing page, but rather\n      //it came from the navbar login, then we should send the user to profile page first\n    } else {\n      alert('Login failed');\n      // throw new Error();\n    }\n  };\n\n  return (\n    <form\n      className=\"sign-in\"\n      onSubmit={handleSubmit}\n      // style={{\n      //   display: 'flex',\n      //   flexDirection: 'column',\n      //   width: '30vw',\n      //   margin: '0 auto',\n      //   marginTop: '8vw',\n      //   justifyContent: 'space-around',\n      //   height: '35vw',\n      //   border: '1px solid grey',\n      //   borderRadius: '1rem',\n      //   padding: '3rem',\n      // }}\n    >\n      <div className=\"field\" style={{ width: '100%' }}>\n        <label>\n          email\n          <input\n            name=\"email\"\n            type=\"email\"\n            value={state.email}\n            onChange={handleChange}\n            required\n            style={{\n              width: '100%',\n              letterSpacing: '.2rem',\n              height: '2rem',\n              border: 'none',\n              borderBottom: '1px solid grey',\n            }}\n          />\n        </label>\n      </div>\n      <div className=\"field\">\n        <label>password</label>\n        <input\n          name=\"password\"\n          type=\"password\"\n          value={state.password}\n          onChange={handleChange}\n          required\n          style={{\n            width: '100%',\n            letterSpacing: '.3rem',\n            height: '2rem',\n            border: 'none',\n            borderBottom: '1px solid grey',\n          }}\n        />\n      </div>\n      {/* <button disabled={!buttonEnabled}>Sign in</button> */}\n      <button>Log in</button>\n    </form>\n  );\n};\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}