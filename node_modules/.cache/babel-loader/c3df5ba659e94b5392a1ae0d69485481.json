{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joohoonkim/Documents/CW/auxion/client/src/components/editListingTerms.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './editListingTerms.styles.css';\nconst {\n  REACT_APP_SERVER_URL\n} = process.env; //TODO: This component written based on assumption of whole property as a prop.\n//Make another fetch to backend and use database as the signle source of truth in an edit component. Receiving state as props from parent is not reliable.\n\nconst EditListingTerms = props => {\n  _s();\n\n  const [property, setProperty] = useState(null);\n  const [description, setDescription] = useState('');\n  const [available, setAvailable] = useState(true);\n  const [files, setFiles] = useState([]);\n  const [auctionEndTime, setAuctionEndTime] = useState(new Date().toJSON().slice(0, 10));\n  const {\n    id\n  } = props.match.params;\n  const {\n    history\n  } = props;\n  useEffect(() => {\n    axios.get(`${REACT_APP_SERVER_URL}/properties/${id}`, {\n      headers: {\n        Authorization: localStorage.getItem('accessToken')\n      }\n    }).then(res => {\n      prePopulateForm(res.data);\n      console.log('DATA FROM EDIT COMP: ', res.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleDescriptionChange = evt => {\n    setDescription(evt.target.value);\n  };\n\n  const handleAvailableChange = evt => {\n    console.log('VALUE :', evt.target.value);\n    setAvailable(JSON.parse(evt.target.value));\n  };\n\n  const handleAuctionEndTimeChange = evt => {\n    setAuctionEndTime(evt.target.value);\n  };\n\n  const handlePhotoSelect = evt => {\n    setFiles(Array.from(evt.target.files)); // console.log('EVT.TGT.FILES: ', evt.target.files);\n    // setFilename(evt.target.files[0].name);\n  };\n\n  const prePopulateForm = property => {\n    setProperty(property);\n    setDescription(property.description);\n    setAvailable(property.available);\n    setAuctionEndTime(property.auction.auctionEndTime.slice(0, 10));\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const formData = new FormData();\n    formData.append('description', JSON.stringify(description));\n    formData.append('available', JSON.stringify(available));\n    formData.append('auctionEndTime', JSON.stringify(auctionEndTime));\n    files.forEach(file => formData.append('file[]', file, file.name)); //https://developer.mozilla.org/en-US/docs/Web/API/FormData/append\n    //sticking '[]' at the end for the browser to understand that it is an array (look at the examples part for the above doc. PHP convention but formData standard comes from PHP anyways. It's just like JSON is a convention of JS but used by other languages. Same thing)\n\n    console.log([...formData.entries()]);\n\n    try {\n      const response = await axios.patch(`${REACT_APP_SERVER_URL}/properties/${props.match.params.id}/edit`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: localStorage.getItem('accessToken')\n        }\n      });\n      console.log('RESPONSE FOR EDITPROPERTY: ', response);\n      const {\n        _id\n      } = response.data;\n      console.log('_ID HERE: ', _id); // console.log('HISTORY HERE: ', history);\n      // history.push(`properties/${_id}`);  //Q: Why does this run twice? Look at url address on broswer.\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  console.log('AVAIL', available);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h2>Property Listing Form</h2>\n    //   <span>Provide property address and Photo</span>\n    _jsxDEV(_Fragment, {\n      children: property && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"available\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"available-radio\",\n              children: \"Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"available-radio\",\n              value: true,\n              checked: available,\n              onChange: handleAvailableChange,\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unavailable-radio\",\n              children: \"Unavailable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"available-radio\",\n              value: false,\n              checked: !available,\n              onChange: handleAvailableChange,\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: handleDescriptionChange,\n            name: \"description\",\n            id: \"description\",\n            placeholder: \"Enter description\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"auctionEndTime\",\n            children: \"Auction End Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: auctionEndTime,\n            onChange: handleAuctionEndTimeChange,\n            name: \"auctionEndTime\",\n            id: \"auctionEndTime\",\n            min: new Date().toJSON().slice(0, 10),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            onChange: handlePhotoSelect,\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit my edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  );\n};\n\n_s(EditListingTerms, \"MDcCbqaiE9SvjnYUFOKBRXnsUUk=\");\n\n_c = EditListingTerms;\nexport default EditListingTerms;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditListingTerms\");","map":{"version":3,"sources":["/Users/joohoonkim/Documents/CW/auxion/client/src/components/editListingTerms.component.jsx"],"names":["React","useEffect","useState","axios","REACT_APP_SERVER_URL","process","env","EditListingTerms","props","property","setProperty","description","setDescription","available","setAvailable","files","setFiles","auctionEndTime","setAuctionEndTime","Date","toJSON","slice","id","match","params","history","get","headers","Authorization","localStorage","getItem","then","res","prePopulateForm","data","console","log","catch","err","handleDescriptionChange","evt","target","value","handleAvailableChange","JSON","parse","handleAuctionEndTimeChange","handlePhotoSelect","Array","from","auction","handleSubmit","preventDefault","formData","FormData","append","stringify","forEach","file","name","entries","response","patch","_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA2BC,OAAO,CAACC,GAAzC,C,CAEA;AACA;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAClD,IAAIiB,IAAJ,GAAWC,MAAX,GAAoBC,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CADkD,CAApD;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAASd,KAAK,CAACe,KAAN,CAAYC,MAA3B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcjB,KAApB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFuB,GADH,CACQ,GAAEtB,oBAAqB,eAAckB,EAAG,EADhD,EACmD;AAC/CK,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADR;AADsC,KADnD,EAMGC,IANH,CAMSC,GAAD,IAAS;AACbC,MAAAA,eAAe,CAACD,GAAG,CAACE,IAAL,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,GAAG,CAACE,IAAzC;AACD,KATH,EAUGG,KAVH,CAUUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAVlB;AAWD,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMC,uBAAuB,GAAIC,GAAD,IAAS;AACvC5B,IAAAA,cAAc,CAAC4B,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAd;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAIH,GAAD,IAAS;AACrCL,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,GAAG,CAACC,MAAJ,CAAWC,KAAlC;AACA5B,IAAAA,YAAY,CAAC8B,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACC,MAAJ,CAAWC,KAAtB,CAAD,CAAZ;AACD,GAHD;;AAKA,QAAMI,0BAA0B,GAAIN,GAAD,IAAS;AAC1CtB,IAAAA,iBAAiB,CAACsB,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAjB;AACD,GAFD;;AAIA,QAAMK,iBAAiB,GAAIP,GAAD,IAAS;AACjCxB,IAAAA,QAAQ,CAACgC,KAAK,CAACC,IAAN,CAAWT,GAAG,CAACC,MAAJ,CAAW1B,KAAtB,CAAD,CAAR,CADiC,CAEjC;AACA;AACD,GAJD;;AAMA,QAAMkB,eAAe,GAAIxB,QAAD,IAAc;AACpCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,IAAAA,cAAc,CAACH,QAAQ,CAACE,WAAV,CAAd;AACAG,IAAAA,YAAY,CAACL,QAAQ,CAACI,SAAV,CAAZ;AACAK,IAAAA,iBAAiB,CAACT,QAAQ,CAACyC,OAAT,CAAiBjC,cAAjB,CAAgCI,KAAhC,CAAsC,CAAtC,EAAyC,EAAzC,CAAD,CAAjB;AACD,GALD;;AAOA,QAAM8B,YAAY,GAAG,MAAOX,GAAP,IAAe;AAClCA,IAAAA,GAAG,CAACY,cAAJ;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BX,IAAI,CAACY,SAAL,CAAe7C,WAAf,CAA/B;AACA0C,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BX,IAAI,CAACY,SAAL,CAAe3C,SAAf,CAA7B;AACAwC,IAAAA,QAAQ,CAACE,MAAT,CAAgB,gBAAhB,EAAkCX,IAAI,CAACY,SAAL,CAAevC,cAAf,CAAlC;AAEAF,IAAAA,KAAK,CAAC0C,OAAN,CAAeC,IAAD,IAAUL,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BG,IAA1B,EAAgCA,IAAI,CAACC,IAArC,CAAxB,EAPkC,CAQlC;AACA;;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGiB,QAAQ,CAACO,OAAT,EAAJ,CAAZ;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM1D,KAAK,CAAC2D,KAAN,CACpB,GAAE1D,oBAAqB,eAAcI,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBF,EAAG,OADvC,EAErB+B,QAFqB,EAGrB;AACE1B,QAAAA,OAAO,EAAE;AACP,0BAAgB,qBADT;AAEPC,UAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAFR;AADX,OAHqB,CAAvB;AAUAK,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CyB,QAA3C;AACA,YAAM;AAAEE,QAAAA;AAAF,UAAUF,QAAQ,CAAC3B,IAAzB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B2B,GAA1B,EAdE,CAeF;AACA;AACD,KAjBD,CAiBE,OAAOzB,GAAP,EAAY;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD;AACF,GA/BD;;AAiCAH,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBvB,SAArB;AAEA;AAAA;AACE;AACA;AACA;AAEA;AAAA,gBACGJ,QAAQ,iBACP;AAAM,QAAA,QAAQ,EAAE0C,YAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA,oCACE;AAAO,cAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,EAAE,EAAC,iBADL;AAEE,cAAA,KAAK,EAAE,IAFT;AAGE,cAAA,OAAO,EAAEtC,SAHX;AAIE,cAAA,QAAQ,EAAE8B,qBAJZ;AAKE,cAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAA,oCACE;AAAO,cAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,EAAE,EAAC,iBADL;AAEE,cAAA,KAAK,EAAE,KAFT;AAGE,cAAA,OAAO,EAAE,CAAC9B,SAHZ;AAIE,cAAA,QAAQ,EAAE8B,qBAJZ;AAKE,cAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAuBE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,KAAK,EAAEhC,WADT;AAEE,YAAA,QAAQ,EAAE4B,uBAFZ;AAGE,YAAA,IAAI,EAAC,aAHP;AAIE,YAAA,EAAE,EAAC,aAJL;AAKE,YAAA,WAAW,EAAC,mBALd;AAME,YAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAmCE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAEtB,cAFT;AAGE,YAAA,QAAQ,EAAE6B,0BAHZ;AAIE,YAAA,IAAI,EAAC,gBAJP;AAKE,YAAA,EAAE,EAAC,gBALL;AAME,YAAA,GAAG,EAAE,IAAI3B,IAAJ,GAAWC,MAAX,GAAoBC,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CANP;AAOE,YAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCF,eAgDE;AAAA;AAAA;AAAA;AAAA,gBAhDF,eAiDE;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,QAAQ,EAAE,IAFZ;AAGE,YAAA,QAAQ,EAAE0B,iBAHZ;AAIE,YAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjDF,eA2DE;AAAA;AAAA;AAAA;AAAA,gBA3DF,eA4DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5DF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AALF;AAwED,CA/JD;;GAAMxC,gB;;KAAAA,gB;AAiKN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './editListingTerms.styles.css';\n\nconst { REACT_APP_SERVER_URL } = process.env;\n\n//TODO: This component written based on assumption of whole property as a prop.\n//Make another fetch to backend and use database as the signle source of truth in an edit component. Receiving state as props from parent is not reliable.\nconst EditListingTerms = (props) => {\n  const [property, setProperty] = useState(null);\n  const [description, setDescription] = useState('');\n  const [available, setAvailable] = useState(true);\n  const [files, setFiles] = useState([]);\n  const [auctionEndTime, setAuctionEndTime] = useState(\n    new Date().toJSON().slice(0, 10)\n  );\n\n  const { id } = props.match.params;\n  const { history } = props;\n\n  useEffect(() => {\n    axios\n      .get(`${REACT_APP_SERVER_URL}/properties/${id}`, {\n        headers: {\n          Authorization: localStorage.getItem('accessToken'),\n        },\n      })\n      .then((res) => {\n        prePopulateForm(res.data);\n        console.log('DATA FROM EDIT COMP: ', res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleDescriptionChange = (evt) => {\n    setDescription(evt.target.value);\n  };\n\n  const handleAvailableChange = (evt) => {\n    console.log('VALUE :', evt.target.value);\n    setAvailable(JSON.parse(evt.target.value));\n  };\n\n  const handleAuctionEndTimeChange = (evt) => {\n    setAuctionEndTime(evt.target.value);\n  };\n\n  const handlePhotoSelect = (evt) => {\n    setFiles(Array.from(evt.target.files));\n    // console.log('EVT.TGT.FILES: ', evt.target.files);\n    // setFilename(evt.target.files[0].name);\n  };\n\n  const prePopulateForm = (property) => {\n    setProperty(property);\n    setDescription(property.description);\n    setAvailable(property.available);\n    setAuctionEndTime(property.auction.auctionEndTime.slice(0, 10));\n  };\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    const formData = new FormData();\n    formData.append('description', JSON.stringify(description));\n    formData.append('available', JSON.stringify(available));\n    formData.append('auctionEndTime', JSON.stringify(auctionEndTime));\n\n    files.forEach((file) => formData.append('file[]', file, file.name));\n    //https://developer.mozilla.org/en-US/docs/Web/API/FormData/append\n    //sticking '[]' at the end for the browser to understand that it is an array (look at the examples part for the above doc. PHP convention but formData standard comes from PHP anyways. It's just like JSON is a convention of JS but used by other languages. Same thing)\n    console.log([...formData.entries()]);\n    try {\n      const response = await axios.patch(\n        `${REACT_APP_SERVER_URL}/properties/${props.match.params.id}/edit`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: localStorage.getItem('accessToken'),\n          },\n        }\n      );\n      console.log('RESPONSE FOR EDITPROPERTY: ', response);\n      const { _id } = response.data;\n\n      console.log('_ID HERE: ', _id);\n      // console.log('HISTORY HERE: ', history);\n      // history.push(`properties/${_id}`);  //Q: Why does this run twice? Look at url address on broswer.\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  console.log('AVAIL', available);\n\n  return (\n    // <div>\n    //   <h2>Property Listing Form</h2>\n    //   <span>Provide property address and Photo</span>\n\n    <>\n      {property && (\n        <form onSubmit={handleSubmit}>\n          <div className=\"available\">\n            <div>\n              <label htmlFor=\"available-radio\">Available</label>\n              <input\n                id=\"available-radio\"\n                value={true}\n                checked={available}\n                onChange={handleAvailableChange}\n                type=\"radio\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"unavailable-radio\">Unavailable</label>\n              <input\n                id=\"available-radio\"\n                value={false}\n                checked={!available}\n                onChange={handleAvailableChange}\n                type=\"radio\"\n              />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"description\">Description </label>\n            <textarea\n              value={description}\n              onChange={handleDescriptionChange}\n              name=\"description\"\n              id=\"description\"\n              placeholder=\"Enter description\"\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"auctionEndTime\">Auction End Time</label>\n            <input\n              type=\"date\"\n              value={auctionEndTime}\n              onChange={handleAuctionEndTimeChange}\n              name=\"auctionEndTime\"\n              id=\"auctionEndTime\"\n              min={new Date().toJSON().slice(0, 10)}\n              required\n            />\n          </div>\n\n          <br />\n          <div>\n            <input\n              type=\"file\"\n              multiple={true}\n              onChange={handlePhotoSelect}\n              accept=\"image/*\"\n            />\n          </div>\n          {/*To enable multiple file uplaod, set multiple attribute to true(Don't do quotes. Wrap true in curly braces) */}\n          {/* <input type=\"submit\" value=\"click\"></input> */}\n          <br />\n          <button>Submit my edits</button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default EditListingTerms;\n"]},"metadata":{},"sourceType":"module"}