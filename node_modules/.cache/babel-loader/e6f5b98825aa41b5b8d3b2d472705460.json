{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// const { REACT_APP_SERVER_URL } = process.env;\n// //TODO: This component written based on assumption of whole property as a prop.\n// const EditListingTerms = (props) => {\n//   const [description, setDescription] = useState(props.property.description);\n//   const [available, setAvailable] = useState(props.property.available);\n//   const [files, setFiles] = useState([]);\n//   const { history } = props;\n//   const handleDescriptionChange = (evt) => {\n//     setDescription(evt.target.value);\n//   };\n//   const handleAvailableChange = (evt) => {\n//     setAvailable(evt.target.checked);\n//   };\n//   // const handleAuctionEndTimeChange = (evt) => {\n//   //   setAuctionEndTime(evt.target.value);\n//   // };\n//   const handlePhotoSelect = (evt) => {\n//     setFiles(Array.from(evt.target.files));\n//     // console.log('EVT.TGT.FILES: ', evt.target.files);\n//     // setFilename(evt.target.files[0].name);\n//   };\n//   const handleSubmit = async (evt) => {\n//     evt.preventDefault();\n//     const formData = new FormData();\n//     formData.append('description', JSON.stringify(description));\n//     formData.append('available', JSON.stringify(available));\n//     // formData.append('auctionEndTime', JSON.stringify(auctionEndTime));\n//     files.forEach((file) => formData.append('file[]', file, file.name));\n//     //https://developer.mozilla.org/en-US/docs/Web/API/FormData/append\n//     //sticking '[]' at the end for the browser to understand that it is an array (look at the examples part for the above doc. PHP convention but formData standard comes from PHP anyways. It's just like JSON is a convention of JS but used by other languages. Same thing)\n//     console.log([...formData.entries()]);\n//     try {\n//       const response = await axios.patch(\n//         `${REACT_APP_SERVER_URL}/properties/${props.match.params.id}/edit`,\n//         formData,\n//         {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: localStorage.getItem('accessToken'),\n//           },\n//         }\n//       );\n//       console.log('RESPONSE FOR EDITPROPERTY: ', response);\n//       const { _id } = response.data;\n//       console.log('_ID HERE: ', _id);\n//       // console.log('HISTORY HERE: ', history);\n//       history.push(`properties/${_id}`);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n//   return (\n//     // <div>\n//     //   <h2>Property Listing Form</h2>\n//     //   <span>Provide property address and Photo</span>\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label htmlFor=\"description\">Description </label>\n//         <textarea\n//           value={description}\n//           onChange={handleDescriptionChange}\n//           name=\"description\"\n//           id=\"description\"\n//           placeholder=\"Enter description\"\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>\n//           Available\n//           <input\n//             value={true}\n//             checked={props.property.available === true}\n//             onChange={handleAvailableChange}\n//             type=\"radio\"\n//           />\n//         </label>\n//         <label>\n//           Unavailable\n//           <input\n//             value={false}\n//             checked={props.property.available === false}\n//             onChange={handleAvailableChange}\n//             type=\"radio\"\n//           />\n//         </label>\n//       </div>\n//       {/* <div>\n//         <label htmlFor=\"auctionEndTime\">Auction End Time</label>\n//         <input\n//           type=\"date\"\n//           value={auctionEndTime}\n//           onChange={handleAuctionEndTimeChange}\n//           name=\"auctionEndTime\"\n//           id=\"auctionEndTime\"\n//           min={new Date().toJSON().slice(0, 10)}\n//           required\n//         />\n//       </div> */}\n//       <br />\n//       <input\n//         type=\"file\"\n//         multiple={true}\n//         onChange={handlePhotoSelect}\n//         accept=\"image/*\"\n//       />\n//       {/*To enable multiple file uplaod, set multiple attribute to true(Don't do quotes. Wrap true in curly braces) */}\n//       {/* <input type=\"submit\" value=\"click\"></input> */}\n//       <br />\n//       <button>Submit my edits</button>\n//     </form>\n//     // </div>\n//   );\n// };\n// export default EditListingTerms;","map":{"version":3,"sources":["/Users/joohoonkim/Documents/CW/auxion/client/src/components/editListingTerms.component.jsx"],"names":[],"mappingssourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const { REACT_APP_SERVER_URL } = process.env;\n\n// //TODO: This component written based on assumption of whole property as a prop.\n// const EditListingTerms = (props) => {\n//   const [description, setDescription] = useState(props.property.description);\n//   const [available, setAvailable] = useState(props.property.available);\n//   const [files, setFiles] = useState([]);\n\n//   const { history } = props;\n\n//   const handleDescriptionChange = (evt) => {\n//     setDescription(evt.target.value);\n//   };\n\n//   const handleAvailableChange = (evt) => {\n//     setAvailable(evt.target.checked);\n//   };\n\n//   // const handleAuctionEndTimeChange = (evt) => {\n//   //   setAuctionEndTime(evt.target.value);\n//   // };\n\n//   const handlePhotoSelect = (evt) => {\n//     setFiles(Array.from(evt.target.files));\n//     // console.log('EVT.TGT.FILES: ', evt.target.files);\n//     // setFilename(evt.target.files[0].name);\n//   };\n\n//   const handleSubmit = async (evt) => {\n//     evt.preventDefault();\n//     const formData = new FormData();\n//     formData.append('description', JSON.stringify(description));\n//     formData.append('available', JSON.stringify(available));\n//     // formData.append('auctionEndTime', JSON.stringify(auctionEndTime));\n\n//     files.forEach((file) => formData.append('file[]', file, file.name));\n//     //https://developer.mozilla.org/en-US/docs/Web/API/FormData/append\n//     //sticking '[]' at the end for the browser to understand that it is an array (look at the examples part for the above doc. PHP convention but formData standard comes from PHP anyways. It's just like JSON is a convention of JS but used by other languages. Same thing)\n//     console.log([...formData.entries()]);\n//     try {\n//       const response = await axios.patch(\n//         `${REACT_APP_SERVER_URL}/properties/${props.match.params.id}/edit`,\n//         formData,\n//         {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: localStorage.getItem('accessToken'),\n//           },\n//         }\n//       );\n//       console.log('RESPONSE FOR EDITPROPERTY: ', response);\n//       const { _id } = response.data;\n\n//       console.log('_ID HERE: ', _id);\n//       // console.log('HISTORY HERE: ', history);\n//       history.push(`properties/${_id}`);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   return (\n//     // <div>\n//     //   <h2>Property Listing Form</h2>\n//     //   <span>Provide property address and Photo</span>\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label htmlFor=\"description\">Description </label>\n//         <textarea\n//           value={description}\n//           onChange={handleDescriptionChange}\n//           name=\"description\"\n//           id=\"description\"\n//           placeholder=\"Enter description\"\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>\n//           Available\n//           <input\n//             value={true}\n//             checked={props.property.available === true}\n//             onChange={handleAvailableChange}\n//             type=\"radio\"\n//           />\n//         </label>\n//         <label>\n//           Unavailable\n//           <input\n//             value={false}\n//             checked={props.property.available === false}\n//             onChange={handleAvailableChange}\n//             type=\"radio\"\n//           />\n//         </label>\n//       </div>\n\n//       {/* <div>\n//         <label htmlFor=\"auctionEndTime\">Auction End Time</label>\n//         <input\n//           type=\"date\"\n//           value={auctionEndTime}\n//           onChange={handleAuctionEndTimeChange}\n//           name=\"auctionEndTime\"\n//           id=\"auctionEndTime\"\n//           min={new Date().toJSON().slice(0, 10)}\n//           required\n//         />\n//       </div> */}\n//       <br />\n//       <input\n//         type=\"file\"\n//         multiple={true}\n//         onChange={handlePhotoSelect}\n//         accept=\"image/*\"\n//       />\n//       {/*To enable multiple file uplaod, set multiple attribute to true(Don't do quotes. Wrap true in curly braces) */}\n//       {/* <input type=\"submit\" value=\"click\"></input> */}\n//       <br />\n//       <button>Submit my edits</button>\n//     </form>\n//     // </div>\n//   );\n// };\n\n// export default EditListingTerms;\n"]},"metadata":{},"sourceType":"module"}