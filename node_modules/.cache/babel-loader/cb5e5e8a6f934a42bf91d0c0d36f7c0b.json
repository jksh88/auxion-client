{"ast":null,"code":"import _objectSpread from\"/Users/joohoonkim/Documents/CW/auxion/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import{useTable,useSortBy}from'react-table';import'./tableContainer.styles.css';var TableContainer=function TableContainer(_ref){var columns=_ref.columns,data=_ref.data;var _useTable=useTable({columns:columns,data:data,initialState:{sortBy:[{id:'purchasePrice',desc:true}]}},useSortBy),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow;var generateSortingIndicator=function generateSortingIndicator(column){return column.isSorted?column.isSortedDesc?' ðŸ”½':' ðŸ”¼':'';};return/*#__PURE__*/ (// If curious what props I get as a result of calling the getter functions (getTableProps(), getRowProps())\n// Use console.log()  This will help better understand how react table works underhood.\n_jsxs(\"table\",_objectSpread(_objectSpread({className:\"table-container\"},getTableProps()),{},{children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/ (// <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n_jsxs(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps(column.getSortByToggleProps())),{},{children:[column.render('Header'),generateSortingIndicator(column)]})));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows.map(function(row){prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{children:row.cells.map(function(cell){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({},cell.getCellProps()),{},{children:cell.render('Cell')}));})}));})}))]})));};export default TableContainer;","map":{"version":3,"sources":["/Users/joohoonkim/Documents/CW/auxion/client/src/components/tableContainer.component.jsx"],"names":["React","useTable","useSortBy","TableContainer","columns","data","initialState","sortBy","id","desc","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","generateSortingIndicator","column","isSorted","isSortedDesc","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":"0PAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,aAApC,CACA,MAAO,6BAAP,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAuB,IAApBC,CAAAA,OAAoB,MAApBA,OAAoB,CAAXC,IAAW,MAAXA,IAAW,eAOxCJ,QAAQ,CACV,CACEG,OAAO,CAAPA,OADF,CAEEC,IAAI,CAAJA,IAFF,CAGEC,YAAY,CAAE,CAAEC,MAAM,CAAE,CAAC,CAAEC,EAAE,CAAE,eAAN,CAAuBC,IAAI,CAAE,IAA7B,CAAD,CAAV,CAHhB,CADU,CAMVP,SANU,CAPgC,CAE1CQ,aAF0C,WAE1CA,aAF0C,CAG1CC,iBAH0C,WAG1CA,iBAH0C,CAI1CC,YAJ0C,WAI1CA,YAJ0C,CAK1CC,IAL0C,WAK1CA,IAL0C,CAM1CC,UAN0C,WAM1CA,UAN0C,CAgB5C,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,MAAD,CAAY,CAC3C,MAAOA,CAAAA,MAAM,CAACC,QAAP,CAAmBD,MAAM,CAACE,YAAP,CAAsB,KAAtB,CAA8B,KAAjD,CAA0D,EAAjE,CACD,CAFD,CAIA,oBACE;AACA;AACA,2CAAO,SAAS,CAAC,iBAAjB,EAAuCR,aAAa,EAApD,6BACE,uBACGE,YAAY,CAACO,GAAb,CAAiB,SAACC,WAAD,qBAChB,yCAAQA,WAAW,CAACC,mBAAZ,EAAR,eACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwB,SAACH,MAAD,sBACvB;AACA,0CAAQA,MAAM,CAACO,cAAP,CAAsBP,MAAM,CAACQ,oBAAP,EAAtB,CAAR,gBACGR,MAAM,CAACS,MAAP,CAAc,QAAd,CADH,CAEGV,wBAAwB,CAACC,MAAD,CAF3B,IAFuB,GAAxB,CADH,GADgB,EAAjB,CADH,EADF,cAeE,4CAAWL,iBAAiB,EAA5B,eACGE,IAAI,CAACM,GAAL,CAAS,SAACO,GAAD,CAAS,CACjBZ,UAAU,CAACY,GAAD,CAAV,CACA,mBACE,yCAAQA,GAAG,CAACC,WAAJ,EAAR,eACGD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAc,SAACU,IAAD,CAAU,CACvB,mBAAO,yCAAQA,IAAI,CAACC,YAAL,EAAR,eAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ,CAA9B,GAAP,CACD,CAFA,CADH,GADF,CAOD,CATA,CADH,GAfF,IAHF,EAgCD,CApDD,CAsDA,cAAetB,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport './tableContainer.styles.css';\n\nconst TableContainer = ({ columns, data }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { sortBy: [{ id: 'purchasePrice', desc: true }] },\n    },\n    useSortBy\n  );\n\n  const generateSortingIndicator = (column) => {\n    return column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : '';\n  };\n\n  return (\n    // If curious what props I get as a result of calling the getter functions (getTableProps(), getRowProps())\n    // Use console.log()  This will help better understand how react table works underhood.\n    <table className=\"table-container\" {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              // <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                {column.render('Header')}\n                {generateSortingIndicator(column)}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TableContainer;\n"]},"metadata":{},"sourceType":"module"}